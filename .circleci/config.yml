version: 2
jobs:
  build:
    docker:
      - image: gobble/python:3.6

    steps:

      - checkout

      - setup_remote_docker

      - run:
          name: Configure Docker Image Env Variable
          command: |
            echo 'export DOCKER_IMAGE=vinodsharma/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1' >> $BASH_ENV
            echo 'export SHELL_SCRIPT_TO_RUN_APP=run_app.sh' >> $BASH_ENV

      - run:
          name: Building Docker Image
          command: |
            docker build -t  $DOCKER_IMAGE .

      - run:
          name: Running Tests
          command: |
            docker run \
              --env AWS_ACCESS_KEY_ID \
              --env AWS_SECRET_ACCESS_KEY \
            -it $DOCKER_IMAGE /bin/bash -c \
              'source $VENV_DIR/bin/activate; \
              pytest tests/test_*.py'

      - run:
          name: Running Consumer and Producer
          command: |
            docker run -d --name rabbitmq-service rabbitmq:3.7.4
            sleep 30
            docker run --network container:rabbitmq-service \
            -dt $DOCKER_IMAGE /bin/bash -c \
              'source $VENV_DIR/bin/activate;python manager_app.py'
            docker run --network container:rabbitmq-service \
            -t $DOCKER_IMAGE /bin/bash -c \
              'source $VENV_DIR/bin/activate;python producer_app.py gobble.regionalmenu.approved hello'
            for i in $(docker ps -a -q); do docker logs "$i"; done;

      - run:
          name: Push Docker Image to Docker Hub
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push $DOCKER_IMAGE

      - run:
          name: Install pip packages needed for deployment
          command: |
            source $VENV_DIR/bin/activate;
            pip install awscli
            pip install boto3
            pip install python-dotenv
            bash .circleci/setup-heroku.sh


      - deploy:
          name: Deploying to staging if tests pass and branch is not master
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              source $VENV_DIR/bin/activate;
              export LOGDNA_APP=$CIRCLE_PROJECT_REPONAME'-staging'
              export BUGSNAG_RELEASE_STAGE=staging
              aws configure set default.region us-east-1
              aws configure set default.output json
              python deploy.py -r $CIRCLE_PROJECT_REPONAME -s $SHELL_SCRIPT_TO_RUN_APP

              export HEROKU_APP_NAME=`echo "${CIRCLE_PROJECT_REPONAME//_/-}-s"`
              heroku config:set DOCKER_IMAGE=$DOCKER_IMAGE -a $HEROKU_APP_NAME
              git remote add staging https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git
              git push staging master
              # heroku git:remote -a $HEROKU_APP_NAME -r staging
              # heroku config:set DOCKER_IMAGE=$DOCKER_IMAGE
              # git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
              ## heroku git:remote -a $HEROKU_APP_NAME -r staging
              # # git push staging master
              # heroku restart
              # heroku ps:scale worker=1
              sleep 5
              heroku logs

            fi

      - deploy:
          name: Deploying to Prod if tests pass and branch is Master
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              source $VENV_DIR/bin/activate;
              export LOGDNA_APP=$CIRCLE_PROJECT_REPONAME'-production'
              export BUGSNAG_RELEASE_STAGE=production
              aws configure set default.region us-west-2
              aws configure set default.output json
              python deploy.py -r $CIRCLE_PROJECT_REPONAME -s $SHELL_SCRIPT_TO_RUN_APP

              export HEROKU_APP_NAME=`echo "${CIRCLE_PROJECT_REPONAME//_/-}-p"`
              heroku config:set DOCKER_IMAGE=$DOCKER_IMAGE -a $HEROKU_APP_NAME
              git remote add production https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git
              git push production master
              # git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git ${CIRCLE_BRANCH}:master
              # heroku restart
              # heroku ps:scale worker=1
              sleep 5
              heroku logs

            fi
